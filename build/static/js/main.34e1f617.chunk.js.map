{"version":3,"sources":["components/db.js","components/pieChart.js","components/splash.js","App.js","serviceWorker.js","index.js"],"names":["db","Dexie","version","stores","drinks","Chart","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","chart","chartData","chartx","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","console","log","react_default","a","createElement","es","React","Component","Splash","addBeer","timestamp","moment","format","beer","name","date","time","class","table","add","countDrinks","makeCharts","addWine","wine","addCocktail","cocktail","then","today","where","startsWith","toArray","setState","drinksToday","and","x","beersToday","length","winesToday","cocktailsToday","Container","Row","Col","sm","md","Button","outline","className","color","size","onClick","index_es","icon","faBeer","faWineGlassAlt","faGlassWhiskey","faGlassMartiniAlt","map","v","i","key","pieChart","App","Jumbotron","fluid","splash","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.34e1f617.chunk.js","sourcesContent":["import Dexie from \"dexie\"\n\nconst db = new Dexie('dexie')\ndb.version(1).stores({ drinks: '++id, date, time, class, name' })\n\nexport default db","import React from 'react';\nimport { Pie, Bar } from \"react-chartjs-2\"\n\nclass Chart extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            chart: this.props.chartData,\n            chartx: {\n                labels: ['Beer', 'Wine', 'Cocktails'],\n                datasets: [{\n                    label: '# of Drinks',\n                    data: [12, 19, 3],\n                    backgroundColor: [\n                        'rgba(255, 99, 132, 0.2)',\n                        'rgba(54, 162, 235, 0.2)',\n                        'rgba(255, 206, 86, 0.2)',\n\n                    ],\n                    borderColor: [\n                        'rgba(255, 99, 132, 1)',\n                        'rgba(54, 162, 235, 1)',\n                        'rgba(255, 206, 86, 1)',\n\n                    ],\n                    borderWidth: 1\n                }]\n            },\n        }\n    }\n\n\n    render() {\n        console.log(this.state, this.props)\n        return (\n            <div>\n                {/* <div><Bar data={this.props.chartx} /></div> */}\n                <div><Pie data={this.props.chartData} /></div>\n            </div>\n        )\n    }\n}\n\nexport default Chart","import React from 'react';\nimport { Button, Container, Row, Col } from 'reactstrap'\nimport moment from \"moment\"\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBeer } from '@fortawesome/free-solid-svg-icons'\nimport { faWineGlassAlt } from '@fortawesome/free-solid-svg-icons'\nimport { faGlassWhiskey } from '@fortawesome/free-solid-svg-icons'\nimport { faGlassMartiniAlt } from '@fortawesome/free-solid-svg-icons'\n\nimport db from \"./db\"\n\nimport PieChart from \"./pieChart\"\n\n\nconsole.log(db)\n// interface SplashProps { }\n// interface AppState {\n//   peoples: any[]\n// }\nclass Splash extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { drinksToday: [] }\n        // this.makeCharts()\n    }\n\n    addBeer = () => {\n        let timestamp = moment().format('HHmmss')\n        let datestamp = moment().format(\"YYMMDD\")\n        let beer = {\n            name: \"beer\", date: datestamp, time: timestamp, class: \"beer\"\n        }\n        db.table(\"drinks\").add(beer)\n        this.countDrinks()\n        this.makeCharts()\n\n        console.log(this.state)\n    }\n    addWine = () => {\n        let timestamp = (moment().format('HHmmss'))\n        let datestamp = moment().format(\"YYMMDD\")\n        let wine = {\n            name: \"wine\", date: datestamp, time: timestamp, class: \"wine\"\n        }\n        db.table(\"drinks\").add(wine)\n        this.countDrinks()\n        this.makeCharts()\n    }\n    addCocktail = () => {\n        let timestamp = (moment().format('HHmmss'))\n        let datestamp = moment().format(\"YYMMDD\")\n        let cocktail = {\n            name: \"cocktail\", date: datestamp, time: timestamp, class: \"cocktail\"\n        }\n        db.table(\"drinks\").add(cocktail).then(() => {\n            // this.countDrinks().then(() => {\n\n            //     this.makeCharts()\n            // });\n        })\n\n\n    }\n    countDrinks = () => {\n        let today = moment().format(\"YYMMDD\")\n        db.table('drinks').where(\"date\").startsWith(today)\n            .toArray()\n            .then((drinks) => {\n                this.setState({ drinksToday: drinks });\n            });\n        db.table('drinks').where(\"date\").startsWith(today)\n            .and(function (x) { return x.class == \"beer\" })\n            .toArray().then(drinks => this.setState({ beersToday: drinks.length }))\n\n        db.table('drinks').where(\"date\").startsWith(today)\n            .and(function (x) { return x.class == \"wine\" })\n            .toArray().then(drinks => this.setState({ winesToday: drinks.length }))\n\n        db.table('drinks').where(\"date\").startsWith(today)\n            .and(function (x) { return x.class == \"cocktail\" })\n            .toArray().then(drinks => this.setState({ cocktailsToday: drinks.length }))\n\n\n    }\n\n    makeCharts = () => {\n        let chart = {\n            // chart: {\n            labels: ['Beer', 'Wine', 'Cocktails'],\n            datasets: [{\n                label: '# of Drinks',\n                data: [this.state.beersToday, this.state.winesToday, this.state.cocktailsToday],\n                backgroundColor: [\n                    'rgba(255, 99, 132, 0.2)',\n                    'rgba(54, 162, 235, 0.2)',\n                    'rgba(255, 206, 86, 0.2)',\n\n                ],\n                borderColor: [\n                    'rgba(255, 99, 132, 1)',\n                    'rgba(54, 162, 235, 1)',\n                    'rgba(255, 206, 86, 1)',\n\n                ],\n                borderWidth: 1\n            }]\n            // }\n        }\n        this.setState((state) => { return { chartData: chart } })\n        console.log(\"xxx\", this.state.chartData)//this is a suggestion, not a force for chartData\n    }\n\n\n    componentDidMount() {\n        this.countDrinks()\n        this.makeCharts()\n    }\n\n\n    render() {\n\n        return (\n            < Container >\n                <Row>\n\n                </Row>\n                <Row>\n                    <Col sm=\"6\" md=\"4\">\n                        {/* <Row><Button outline class=\"spaced\" color=\"secondary\" size=\"lg\" onClick={this.addBeer()}>Beer</Button></Row> */}\n                        <Row><Button outline className=\"spaced\" color=\"secondary\" size=\"lg\" onClick={this.addBeer}><FontAwesomeIcon icon={faBeer} />Beer</Button></Row>\n                        <Row><Button outline className=\"spaced\" color=\"secondary\" size=\"lg\" onClick={this.addWine}><FontAwesomeIcon icon={faWineGlassAlt} />Wine</Button></Row>\n                        <Row><Button outline className=\"spaced\" color=\"secondary\" size=\"lg\" onClick={this.addCocktail}><FontAwesomeIcon icon={faGlassWhiskey} />Single</Button></Row>\n                        <Row><Button outline className=\"spaced\" color=\"secondary\" size=\"lg\" onClick={this.addCocktail}><FontAwesomeIcon icon={faGlassMartiniAlt} />Double</Button></Row>\n                    </Col>\n                    <Col sm=\"6\" md=\"8\">\n                        today I've had: {this.state.drinksToday.length} drinks\n                        <ol>\n                            {this.state.drinksToday.map((v, i) => {\n                                return [<li key={i}>{v.name} {v.time}</li>]\n                            }\n                            )}\n                        </ol>\n                    </Col>\n                    <PieChart chartData={this.state.chartData} />\n                </Row>\n            </Container >\n        )\n    }\n}\n// ReactDOM.render(\n//     <Splash />,\n//     document.getElementById('root')\n// )\n\nexport default Splash\n\n\n","import React from 'react';\nimport { Jumbotron, Container, } from 'reactstrap'\nimport './App.css';\nimport Splash from \"./components/splash\"\n\nfunction App() {\n  return (\n    <div>\n      <Jumbotron fluid>\n        <Container fluid>\n          <h1 className=\"display-3\">The drink tracker app</h1>\n          <p className=\"lead\">Now you know how much you've had to drink</p>\n        </Container>\n      </Jumbotron>\n      <Splash />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}